{"ast":null,"code":"// import { createStore } from \"redux\";\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst counterSlice = createSlice({\n  name: 'counterState',\n  initialState: {\n    counter: 0,\n    showCounter: true\n  },\n  reducers: {\n    increase(state) {\n      state.counter++;\n    },\n    increaseBy(state, action) {\n      state.counter += action.payload;\n    },\n    decrease(state) {\n      state.counter--;\n    },\n    decreaseBy(state, action) {\n      if (!isNaN(action.payload)) {\n        state.counter -= action.payload;\n      } else {\n        return state.counter;\n      }\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst authSlice = createSlice({\n  name: 'authState',\n  initialState: {\n    name: \"\",\n    pswrd: \"\",\n    isAuthenticated: false\n  },\n  reducer: {\n    login(state, action) {\n      state.isAuthenticated = true;\n    },\n    logout(state, action) {\n      state.isAuthenticated = false;\n    }\n  }\n});\n\n// const CounterReducer = (state = { counter: 0, showCounter: true }, action) => {\n//   console.log(action);\n\n//   switch (action.type) {\n//     case \"INCREASE\":\n//       return {\n//         ...state,\n//         counter: state.counter + 1,\n//       };\n\n//     case \"DECREASE\":\n//       return {\n//         ...state,\n//         counter: state.counter - 1,\n//       };\n\n//     case \"INCREASE_BY\":\n//       return {\n//         ...state,\n//         counter: state.counter + action.payload,\n//       };\n\n//     case \"DECREASE_BY\":\n//       return {\n//         ...state,\n//         counter: state.counter - action.payload,\n//       };\n\n//     case \"TOGGLE_COUNTER\":\n//       return {\n//         ...state,\n//         showCounter: !state.showCounter,\n//       };\n//     default:\n//       return state;\n//   }\n\n// };\n\n// const store = createStore(CounterReducer);\nconst store = configureStore({\n  // reducer: counterSlice.reducer\n  reducer: {\n    counterReducer: counterSlice.reducer,\n    authReducer: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","counterSlice","name","initialState","counter","showCounter","reducers","increase","state","increaseBy","action","payload","decrease","decreaseBy","isNaN","toggleCounter","authSlice","pswrd","isAuthenticated","reducer","login","logout","store","counterReducer","authReducer","counterActions","actions","authActions"],"sources":["A:/UI Development/redux-basics-react/src/store/index.js"],"sourcesContent":["// import { createStore } from \"redux\";\r\nimport  {createSlice, configureStore} from '@reduxjs/toolkit';\r\n\r\nconst counterSlice = createSlice({\r\n    name : 'counterState',\r\n    initialState : { counter: 0, showCounter: true },\r\n    reducers: {\r\n        increase(state) {\r\n            state.counter++;\r\n        },\r\n        increaseBy (state,action) {\r\n            state.counter += action.payload ;\r\n        },\r\n        decrease(state) {\r\n            state.counter--;\r\n        },\r\n        decreaseBy(state, action) {\r\n            if(!isNaN(action.payload)) {\r\n                state.counter -= action.payload ;\r\n            } else {\r\n                return state.counter;\r\n            }\r\n            \r\n        },\r\n        toggleCounter(state) {\r\n            state.showCounter = !state.showCounter;\r\n        }\r\n\r\n    }\r\n});\r\n\r\nconst authSlice = createSlice({\r\n    name: 'authState',\r\n    initialState : {name:  \"\", pswrd : \"\", isAuthenticated: false},\r\n    reducer : {\r\n        login(state,action) {\r\n            state.isAuthenticated = true;\r\n        },\r\n        logout(state,action) {\r\n            state.isAuthenticated = false;\r\n        }\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n\r\n// const CounterReducer = (state = { counter: 0, showCounter: true }, action) => {\r\n//   console.log(action);\r\n\r\n//   switch (action.type) {\r\n//     case \"INCREASE\":\r\n//       return {\r\n//         ...state,\r\n//         counter: state.counter + 1,\r\n//       };\r\n\r\n//     case \"DECREASE\":\r\n//       return {\r\n//         ...state,\r\n//         counter: state.counter - 1,\r\n//       };\r\n\r\n//     case \"INCREASE_BY\":\r\n//       return {\r\n//         ...state,\r\n//         counter: state.counter + action.payload,\r\n//       };\r\n\r\n//     case \"DECREASE_BY\":\r\n//       return {\r\n//         ...state,\r\n//         counter: state.counter - action.payload,\r\n//       };\r\n\r\n//     case \"TOGGLE_COUNTER\":\r\n//       return {\r\n//         ...state,\r\n//         showCounter: !state.showCounter,\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n\r\n// };\r\n\r\n// const store = createStore(CounterReducer);\r\nconst store  = configureStore({\r\n    // reducer: counterSlice.reducer\r\n    reducer: {counterReducer : counterSlice.reducer, authReducer: authSlice.reducer}\r\n})\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default store;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,cAAc,QAAO,kBAAkB;AAE7D,MAAMC,YAAY,GAAGF,WAAW,CAAC;EAC7BG,IAAI,EAAG,cAAc;EACrBC,YAAY,EAAG;IAAEC,OAAO,EAAE,CAAC;IAAEC,WAAW,EAAE;EAAK,CAAC;EAChDC,QAAQ,EAAE;IACNC,QAAQA,CAACC,KAAK,EAAE;MACZA,KAAK,CAACJ,OAAO,EAAE;IACnB,CAAC;IACDK,UAAUA,CAAED,KAAK,EAACE,MAAM,EAAE;MACtBF,KAAK,CAACJ,OAAO,IAAIM,MAAM,CAACC,OAAO;IACnC,CAAC;IACDC,QAAQA,CAACJ,KAAK,EAAE;MACZA,KAAK,CAACJ,OAAO,EAAE;IACnB,CAAC;IACDS,UAAUA,CAACL,KAAK,EAAEE,MAAM,EAAE;MACtB,IAAG,CAACI,KAAK,CAACJ,MAAM,CAACC,OAAO,CAAC,EAAE;QACvBH,KAAK,CAACJ,OAAO,IAAIM,MAAM,CAACC,OAAO;MACnC,CAAC,MAAM;QACH,OAAOH,KAAK,CAACJ,OAAO;MACxB;IAEJ,CAAC;IACDW,aAAaA,CAACP,KAAK,EAAE;MACjBA,KAAK,CAACH,WAAW,GAAG,CAACG,KAAK,CAACH,WAAW;IAC1C;EAEJ;AACJ,CAAC,CAAC;AAEF,MAAMW,SAAS,GAAGjB,WAAW,CAAC;EAC1BG,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAG;IAACD,IAAI,EAAG,EAAE;IAAEe,KAAK,EAAG,EAAE;IAAEC,eAAe,EAAE;EAAK,CAAC;EAC9DC,OAAO,EAAG;IACNC,KAAKA,CAACZ,KAAK,EAACE,MAAM,EAAE;MAChBF,KAAK,CAACU,eAAe,GAAG,IAAI;IAChC,CAAC;IACDG,MAAMA,CAACb,KAAK,EAACE,MAAM,EAAE;MACjBF,KAAK,CAACU,eAAe,GAAG,KAAK;IACjC;EACJ;AACJ,CAAC,CAAC;;AAMF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAMI,KAAK,GAAItB,cAAc,CAAC;EAC1B;EACAmB,OAAO,EAAE;IAACI,cAAc,EAAGtB,YAAY,CAACkB,OAAO;IAAEK,WAAW,EAAER,SAAS,CAACG;EAAO;AACnF,CAAC,CAAC;AAEF,OAAO,MAAMM,cAAc,GAAGxB,YAAY,CAACyB,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGX,SAAS,CAACU,OAAO;AAE5C,eAAeJ,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}