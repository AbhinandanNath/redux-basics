{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst counterSlice = createSlice({\n  name: 'counterState',\n  initialState: {\n    counter: 0,\n    showCounter: true\n  },\n  reducers: {\n    increase(state) {\n      state.counter++;\n    },\n    increaseBy(state, action) {\n      state.counter += action.payload;\n    },\n    decrease(state) {\n      state.counter--;\n    },\n    decreaseBy(state, action) {\n      state.counter -= action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst CounterReducer = (state = {\n  counter: 0,\n  showCounter: true\n}, action) => {\n  console.log(action);\n  switch (action.type) {\n    case \"INCREASE\":\n      return {\n        ...state,\n        counter: state.counter + 1\n      };\n    case \"DECREASE\":\n      return {\n        ...state,\n        counter: state.counter - 1\n      };\n    case \"INCREASE_BY\":\n      return {\n        ...state,\n        counter: state.counter + action.payload\n      };\n    case \"DECREASE_BY\":\n      return {\n        ...state,\n        counter: state.counter - action.payload\n      };\n    case \"TOGGLE_COUNTER\":\n      return {\n        ...state,\n        showCounter: !state.showCounter\n      };\n    default:\n      return state;\n  }\n};\n\n// const store = createStore(CounterReducer);\n_c = CounterReducer;\nconst store = configureStore({\n  reducer: counterSlice.reducer\n  // reducer: {counterReducer : counterSlice.reducer}\n});\nexport default store;\nvar _c;\n$RefreshReg$(_c, \"CounterReducer\");","map":{"version":3,"names":["createStore","createSlice","configureStore","counterSlice","name","initialState","counter","showCounter","reducers","increase","state","increaseBy","action","payload","decrease","decreaseBy","toggleCounter","CounterReducer","console","log","type","_c","store","reducer","$RefreshReg$"],"sources":["A:/UI Development/redux-basics-react/src/store/index.js"],"sourcesContent":["import { createStore } from \"redux\";\r\nimport  {createSlice, configureStore} from '@reduxjs/toolkit';\r\n\r\nconst counterSlice = createSlice({\r\n    name : 'counterState',\r\n    initialState : { counter: 0, showCounter: true },\r\n    reducers: {\r\n        increase(state) {\r\n            state.counter++;\r\n        },\r\n        increaseBy (state,action) {\r\n            state.counter += action.payload ;\r\n        },\r\n        decrease(state) {\r\n            state.counter--;\r\n        },\r\n        decreaseBy(state, action) {\r\n            state.counter -= action.payload ;\r\n        },\r\n        toggleCounter(state) {\r\n            state.showCounter = !state.showCounter;\r\n        }\r\n\r\n    }\r\n});\r\n\r\n\r\n\r\nconst CounterReducer = (state = { counter: 0, showCounter: true }, action) => {\r\n  console.log(action);\r\n\r\n  switch (action.type) {\r\n    case \"INCREASE\":\r\n      return {\r\n        ...state,\r\n        counter: state.counter + 1,\r\n      };\r\n\r\n    case \"DECREASE\":\r\n      return {\r\n        ...state,\r\n        counter: state.counter - 1,\r\n      };\r\n\r\n    case \"INCREASE_BY\":\r\n      return {\r\n        ...state,\r\n        counter: state.counter + action.payload,\r\n      };\r\n\r\n    case \"DECREASE_BY\":\r\n      return {\r\n        ...state,\r\n        counter: state.counter - action.payload,\r\n      };\r\n\r\n    case \"TOGGLE_COUNTER\":\r\n      return {\r\n        ...state,\r\n        showCounter: !state.showCounter,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};\r\n\r\n// const store = createStore(CounterReducer);\r\nconst store  = configureStore({\r\n    reducer: counterSlice.reducer\r\n    // reducer: {counterReducer : counterSlice.reducer}\r\n})\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,EAAEC,cAAc,QAAO,kBAAkB;AAE7D,MAAMC,YAAY,GAAGF,WAAW,CAAC;EAC7BG,IAAI,EAAG,cAAc;EACrBC,YAAY,EAAG;IAAEC,OAAO,EAAE,CAAC;IAAEC,WAAW,EAAE;EAAK,CAAC;EAChDC,QAAQ,EAAE;IACNC,QAAQA,CAACC,KAAK,EAAE;MACZA,KAAK,CAACJ,OAAO,EAAE;IACnB,CAAC;IACDK,UAAUA,CAAED,KAAK,EAACE,MAAM,EAAE;MACtBF,KAAK,CAACJ,OAAO,IAAIM,MAAM,CAACC,OAAO;IACnC,CAAC;IACDC,QAAQA,CAACJ,KAAK,EAAE;MACZA,KAAK,CAACJ,OAAO,EAAE;IACnB,CAAC;IACDS,UAAUA,CAACL,KAAK,EAAEE,MAAM,EAAE;MACtBF,KAAK,CAACJ,OAAO,IAAIM,MAAM,CAACC,OAAO;IACnC,CAAC;IACDG,aAAaA,CAACN,KAAK,EAAE;MACjBA,KAAK,CAACH,WAAW,GAAG,CAACG,KAAK,CAACH,WAAW;IAC1C;EAEJ;AACJ,CAAC,CAAC;AAIF,MAAMU,cAAc,GAAGA,CAACP,KAAK,GAAG;EAAEJ,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC,EAAEK,MAAM,KAAK;EAC5EM,OAAO,CAACC,GAAG,CAACP,MAAM,CAAC;EAEnB,QAAQA,MAAM,CAACQ,IAAI;IACjB,KAAK,UAAU;MACb,OAAO;QACL,GAAGV,KAAK;QACRJ,OAAO,EAAEI,KAAK,CAACJ,OAAO,GAAG;MAC3B,CAAC;IAEH,KAAK,UAAU;MACb,OAAO;QACL,GAAGI,KAAK;QACRJ,OAAO,EAAEI,KAAK,CAACJ,OAAO,GAAG;MAC3B,CAAC;IAEH,KAAK,aAAa;MAChB,OAAO;QACL,GAAGI,KAAK;QACRJ,OAAO,EAAEI,KAAK,CAACJ,OAAO,GAAGM,MAAM,CAACC;MAClC,CAAC;IAEH,KAAK,aAAa;MAChB,OAAO;QACL,GAAGH,KAAK;QACRJ,OAAO,EAAEI,KAAK,CAACJ,OAAO,GAAGM,MAAM,CAACC;MAClC,CAAC;IAEH,KAAK,gBAAgB;MACnB,OAAO;QACL,GAAGH,KAAK;QACRH,WAAW,EAAE,CAACG,KAAK,CAACH;MACtB,CAAC;IACH;MACE,OAAOG,KAAK;EAChB;AAEF,CAAC;;AAED;AAAAW,EAAA,GAvCMJ,cAAc;AAwCpB,MAAMK,KAAK,GAAIpB,cAAc,CAAC;EAC1BqB,OAAO,EAAEpB,YAAY,CAACoB;EACtB;AACJ,CAAC,CAAC;AAEF,eAAeD,KAAK;AAAC,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}