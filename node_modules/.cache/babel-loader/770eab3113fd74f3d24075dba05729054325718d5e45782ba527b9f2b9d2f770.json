{"ast":null,"code":"// import { createStore } from \"redux\";\nimport { configureStore } from '@reduxjs/toolkit';\nimport counterSliceReducer from './counterSlice';\nimport authSliceReducer from './authSlice';\n\n// const CounterReducer = (state = { counter: 0, showCounter: true }, action) => {\n//   console.log(action);\n\n//   switch (action.type) {\n//     case \"INCREASE\":\n//       return {\n//         ...state,\n//         counter: state.counter + 1,\n//       };\n\n//     case \"DECREASE\":\n//       return {\n//         ...state,\n//         counter: state.counter - 1,\n//       };\n\n//     case \"INCREASE_BY\":\n//       return {\n//         ...state,\n//         counter: state.counter + action.payload,\n//       };\n\n//     case \"DECREASE_BY\":\n//       return {\n//         ...state,\n//         counter: state.counter - action.payload,\n//       };\n\n//     case \"TOGGLE_COUNTER\":\n//       return {\n//         ...state,\n//         showCounter: !state.showCounter,\n//       };\n//     default:\n//       return state;\n//   }\n\n// };\n\n// const store = createStore(CounterReducer);\nconst store = configureStore({\n  // reducer: counterSlice.reducer\n  reducer: {\n    counterReducer: counterSliceReducer,\n    authReducer: authSliceReducer\n  }\n});\nexport default store;\nfunction checkLongestWord(sentence) {\n  var sentList = sentence.split(\" \");\n  console.log(sentList);\n  var longWord = [];\n  sentList.forEach(function (item) {\n    if (longWord.length > 0 && item.length > longWord[0].length) {\n      longWord = [];\n      longWord.push(item);\n    } else {\n      longWord.push(item);\n    }\n  });\n  console.log(longWord[0]);\n}","map":{"version":3,"names":["configureStore","counterSliceReducer","authSliceReducer","store","reducer","counterReducer","authReducer","checkLongestWord","sentence","sentList","split","console","log","longWord","forEach","item","length","push"],"sources":["A:/UI Development/redux-basics-react/src/store/index.js"],"sourcesContent":["// import { createStore } from \"redux\";\r\nimport  {configureStore} from '@reduxjs/toolkit';\r\nimport counterSliceReducer from './counterSlice';\r\nimport authSliceReducer from './authSlice';\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const CounterReducer = (state = { counter: 0, showCounter: true }, action) => {\r\n//   console.log(action);\r\n\r\n//   switch (action.type) {\r\n//     case \"INCREASE\":\r\n//       return {\r\n//         ...state,\r\n//         counter: state.counter + 1,\r\n//       };\r\n\r\n//     case \"DECREASE\":\r\n//       return {\r\n//         ...state,\r\n//         counter: state.counter - 1,\r\n//       };\r\n\r\n//     case \"INCREASE_BY\":\r\n//       return {\r\n//         ...state,\r\n//         counter: state.counter + action.payload,\r\n//       };\r\n\r\n//     case \"DECREASE_BY\":\r\n//       return {\r\n//         ...state,\r\n//         counter: state.counter - action.payload,\r\n//       };\r\n\r\n//     case \"TOGGLE_COUNTER\":\r\n//       return {\r\n//         ...state,\r\n//         showCounter: !state.showCounter,\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n\r\n// };\r\n\r\n// const store = createStore(CounterReducer);\r\nconst store  = configureStore({\r\n    // reducer: counterSlice.reducer\r\n    reducer: {counterReducer : counterSliceReducer, authReducer: authSliceReducer}\r\n})\r\n\r\n\r\n\r\nexport default store;\r\n\r\nfunction checkLongestWord(sentence) {\r\n    var sentList = sentence.split(\" \"); console.log(sentList);\r\n    var longWord = [];\r\n    sentList.forEach(function(item) {\r\n        if ( longWord.length > 0 && item.length > longWord[0].length){\r\n            longWord = [];\r\n            longWord.push(item)\r\n        } else {\r\n            longWord.push(item)\r\n        }\r\n       \r\n    }) ;\r\n    console.log(longWord[0])\r\n  }\r\n"],"mappings":"AAAA;AACA,SAASA,cAAc,QAAO,kBAAkB;AAChD,OAAOC,mBAAmB,MAAM,gBAAgB;AAChD,OAAOC,gBAAgB,MAAM,aAAa;;AAO1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAMC,KAAK,GAAIH,cAAc,CAAC;EAC1B;EACAI,OAAO,EAAE;IAACC,cAAc,EAAGJ,mBAAmB;IAAEK,WAAW,EAAEJ;EAAgB;AACjF,CAAC,CAAC;AAIF,eAAeC,KAAK;AAEpB,SAASI,gBAAgBA,CAACC,QAAQ,EAAE;EAChC,IAAIC,QAAQ,GAAGD,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC;EAAEC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;EACzD,IAAII,QAAQ,GAAG,EAAE;EACjBJ,QAAQ,CAACK,OAAO,CAAC,UAASC,IAAI,EAAE;IAC5B,IAAKF,QAAQ,CAACG,MAAM,GAAG,CAAC,IAAID,IAAI,CAACC,MAAM,GAAGH,QAAQ,CAAC,CAAC,CAAC,CAACG,MAAM,EAAC;MACzDH,QAAQ,GAAG,EAAE;MACbA,QAAQ,CAACI,IAAI,CAACF,IAAI,CAAC;IACvB,CAAC,MAAM;MACHF,QAAQ,CAACI,IAAI,CAACF,IAAI,CAAC;IACvB;EAEJ,CAAC,CAAC;EACFJ,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}